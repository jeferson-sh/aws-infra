name: Build Infrastructure

on:
  workflow_dispatch:  # Isso permite que você acione manualmente o fluxo de trabalho

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  build_native_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@v3
        with:
          graalvm: '22.1.0'  # Versão do GraalVM
          java-version: '17'

      - name: Build Native Image
        run: |
          cd app
          ./mvnw -Pnative clean install -DskipTests

      - name: Prepare Deployment Package
        run: |
          cd app
          mv bootstrap .
          zip -j spring-native-function.zip bootstrap spring-native

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: lambda_deployment_package
          path: app/spring-native-function.zip
